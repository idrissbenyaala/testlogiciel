name: Build and Analyze with SonarCloud

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    
    steps:
      # Étape 1 : Récupérer le code source
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactive les clones peu profonds pour une meilleure analyse

      # Étape 2 : Configurer Java JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Vous pouvez également choisir 'temurin' ou d'autres distributions
      
      # Étape 3 : Mettre en cache les fichiers SonarQube
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: |
            ${{ runner.os }}-sonar
      
      # Étape 4 : Mettre en cache les dépendances Maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # Étape 5 : Construire le projet et analyser avec SonarCloud
      - name: Build and Analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Le token SonarCloud doit être ajouté dans les Secrets GitHub
          SONAR_HOST_URL: 'https://sonarcloud.io'  # URL de SonarCloud
        run: |
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=e-learning \
            -Dsonar.projectName="e-learning"
